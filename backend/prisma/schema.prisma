generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String   @id @default(cuid())
  email           String   @unique
  studentId       String   @unique
  name            String
  password        String
  emailVerified   Boolean  @default(false)
  verificationToken String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  // Relations
  enrollments     Enrollment[]
  progress        Progress[]

  @@map("users")
}

model Module {
  id          String   @id @default(cuid())
  code        String   @unique
  name        String
  description String?
  credits     Int
  semester    String
  year        Int
  prerequisites String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  enrollments Enrollment[]
  progress    Progress[]

  @@map("modules")
}

model Enrollment {
  id       String @id @default(cuid())
  userId   String
  moduleId String
  status   EnrollmentStatus @default(ENROLLED)
  grade    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  module   Module @relation(fields: [moduleId], references: [id], onDelete: Cascade)

  @@unique([userId, moduleId])
  @@map("enrollments")
}

model Progress {
  id          String   @id @default(cuid())
  userId      String
  moduleId    String
  completed   Boolean  @default(false)
  percentage  Float    @default(0)
  lastAccessed DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  module      Module   @relation(fields: [moduleId], references: [id], onDelete: Cascade)

  @@unique([userId, moduleId])
  @@map("progress")
}

enum EnrollmentStatus {
  ENROLLED
  COMPLETED
  DROPPED
  FAILED
}